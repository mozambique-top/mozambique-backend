version: '3.8'

services:
  nginx:
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/code
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    depends_on:
      - backend

  certbot:
    container_name: certbot
    image: certbot/certbot
    volumes:
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  backend:
    container_name: backend
    restart: always
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - .:/code
    env_file:
      - ./backend/.env
    command: >
      bash -c "python manage.py migrate --noinput && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --log-level debug --timeout 120 --bind 0.0.0.0:8000 --reload"
    depends_on:
      - db

  db:
    container_name: db
    image: postgres:14
    restart: always
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_DB=$${POSTGRES_DB}
      - POSTGRES_USER=$${POSTGRES_USER}
      - POSTGRES_PASSWORD=$${POSTGRES_PASSWORD}
    expose:
      - 5432
    volumes:
      - ./dump:/var/lib/postgresql/data
